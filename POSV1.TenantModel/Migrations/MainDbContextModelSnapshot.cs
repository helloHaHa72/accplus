// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using POSV1.TenantModel;

#nullable disable

namespace POSV1.TenantModel.Migrations
{
    [DbContext(typeof(MainDbContext))]
    partial class MainDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("POSV1.MasterDBModel.AuthModels.AccessList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MainHeading")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AccessLists");
                });

            modelBuilder.Entity("POSV1.MasterDBModel.AuthModels.UserPermissionList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccesListId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTimeOffset>("DateCreated")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateDeleted")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateUpdated")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("UpdatedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("roleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserPermissionLists");
                });

            modelBuilder.Entity("POSV1.TenantModel.Models.EntityModels.Accounting.led01ledgers", b =>
                {
                    b.Property<int>("led01uin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("led01uin"));

                    b.Property<string>("CreatedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTimeOffset>("DateCreated")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateDeleted")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateUpdated")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("UpdatedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("led01balance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("led01code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("led01date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("led01deleted")
                        .HasColumnType("bit");

                    b.Property<string>("led01desc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("led01isdefaultled")
                        .HasColumnType("bit");

                    b.Property<int?>("led01led03uin")
                        .HasColumnType("int");

                    b.Property<int>("led01led05uin")
                        .HasColumnType("int");

                    b.Property<decimal>("led01open_bal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("led01prev_bal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("led01related_id")
                        .HasColumnType("int");

                    b.Property<bool>("led01status")
                        .HasColumnType("bit");

                    b.Property<string>("led01title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("led01uin");

                    b.HasIndex("led01led03uin");

                    b.HasIndex("led01led05uin");

                    b.ToTable("led01ledgers");

                    b.HasData(
                        new
                        {
                            led01uin = -1,
                            CreatedName = "SYSTEM",
                            DateCreated = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedName = "",
                            UpdatedName = "",
                            led01balance = 0m,
                            led01code = "SalesDiscount",
                            led01deleted = false,
                            led01desc = "Discount detail",
                            led01led05uin = 4,
                            led01open_bal = 0m,
                            led01prev_bal = 0m,
                            led01related_id = 0,
                            led01status = true,
                            led01title = "Discount Given"
                        },
                        new
                        {
                            led01uin = -2,
                            CreatedName = "SYSTEM",
                            DateCreated = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedName = "",
                            UpdatedName = "",
                            led01balance = 0m,
                            led01code = "PurchaseDiscount",
                            led01deleted = false,
                            led01desc = "Discount detail",
                            led01led05uin = 4,
                            led01open_bal = 0m,
                            led01prev_bal = 0m,
                            led01related_id = 0,
                            led01status = true,
                            led01title = "Discount Received"
                        });
                });

            modelBuilder.Entity("POSV1.TenantModel.Models.EntityModels.Accounting.led03general_ledgers", b =>
                {
                    b.Property<int>("led03uin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("led03uin"));

                    b.Property<string>("CreatedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTimeOffset>("DateCreated")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateDeleted")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateUpdated")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("UpdatedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("led03balance")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("led03code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("led03deleted")
                        .HasColumnType("bit");

                    b.Property<string>("led03desc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("led03led03uin")
                        .HasColumnType("int");

                    b.Property<int>("led03led05uin")
                        .HasColumnType("int");

                    b.Property<bool>("led03status")
                        .HasColumnType("bit");

                    b.Property<string>("led03title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("led03uin");

                    b.HasIndex("led03led03uin");

                    b.HasIndex("led03led05uin");

                    b.ToTable("led03general_ledgers");
                });

            modelBuilder.Entity("POSV1.TenantModel.Models.EntityModels.Accounting.led05ledger_types", b =>
                {
                    b.Property<int>("led05uin")
                        .HasColumnType("int");

                    b.Property<string>("CreatedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTimeOffset>("DateCreated")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateDeleted")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateUpdated")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("UpdatedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("led05add_dr")
                        .HasColumnType("bit");

                    b.Property<string>("led05title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("led05title_nep")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("led05uin");

                    b.ToTable("led05ledger_types");

                    b.HasData(
                        new
                        {
                            led05uin = 1,
                            CreatedName = "",
                            DateCreated = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedName = "",
                            UpdatedName = "",
                            led05add_dr = true,
                            led05title = "Assets",
                            led05title_nep = " सम्पत्ति"
                        },
                        new
                        {
                            led05uin = 2,
                            CreatedName = "",
                            DateCreated = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedName = "",
                            UpdatedName = "",
                            led05add_dr = false,
                            led05title = "Liabilities",
                            led05title_nep = " देयता"
                        },
                        new
                        {
                            led05uin = 3,
                            CreatedName = "",
                            DateCreated = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedName = "",
                            UpdatedName = "",
                            led05add_dr = false,
                            led05title = "Income",
                            led05title_nep = " आम्दानी"
                        },
                        new
                        {
                            led05uin = 4,
                            CreatedName = "",
                            DateCreated = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedName = "",
                            UpdatedName = "",
                            led05add_dr = true,
                            led05title = "Expenses",
                            led05title_nep = "व्यय "
                        });
                });

            modelBuilder.Entity("POSV1.TenantModel.Models.EntityModels.CloudR2.CloudR2Purchase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CloudR2Path")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("FailRemarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Path")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProcStatus")
                        .HasColumnType("int");

                    b.Property<int>("PurchaseId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PurchaseId");

                    b.ToTable("CloudR2Purchase");
                });

            modelBuilder.Entity("POSV1.TenantModel.Models.EntityModels.Estimate.est01estimate", b =>
                {
                    b.Property<int>("est01uin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("est01uin"));

                    b.Property<string>("CreatedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTimeOffset>("DateCreated")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateDeleted")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateUpdated")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("UpdatedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("est01customername")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("est01refnumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("est01status")
                        .HasColumnType("int");

                    b.HasKey("est01uin");

                    b.ToTable("est01estimate");
                });

            modelBuilder.Entity("POSV1.TenantModel.Models.EntityModels.Estimate.est02estimatesales", b =>
                {
                    b.Property<int>("est02uin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("est02uin"));

                    b.Property<string>("CreatedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTimeOffset>("DateCreated")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateDeleted")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateUpdated")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("UpdatedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("cus01customerscus01uin")
                        .HasColumnType("int");

                    b.Property<int?>("est02cus01uin")
                        .HasColumnType("int");

                    b.Property<DateTime>("est02date_eng")
                        .HasColumnType("datetime2");

                    b.Property<string>("est02date_nep")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("est02deleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("est02disc_amt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("est02disc_percentage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("est02est01uin")
                        .HasColumnType("int");

                    b.Property<string>("est02invoice_no")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("est02remarks")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("est02status")
                        .HasColumnType("bit");

                    b.Property<decimal>("est02sub_total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("est02total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("est02voucher_no")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("est02uin");

                    b.HasIndex("cus01customerscus01uin");

                    b.HasIndex("est02est01uin");

                    b.ToTable("est02estimatesales");
                });

            modelBuilder.Entity("POSV1.TenantModel.Models.EntityModels.Estimate.est02estimatesalesitems", b =>
                {
                    b.Property<int>("est02uin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("est02uin"));

                    b.Property<string>("CreatedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTimeOffset>("DateCreated")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateDeleted")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateUpdated")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("UpdatedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("est02destination")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("est02disc_amt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("est02emp01uin")
                        .HasColumnType("int");

                    b.Property<int>("est02estimatesalesuin")
                        .HasColumnType("int");

                    b.Property<double>("est02net_amt")
                        .HasColumnType("float");

                    b.Property<int>("est02pro02uin")
                        .HasColumnType("int");

                    b.Property<double>("est02qty")
                        .HasColumnType("float");

                    b.Property<decimal>("est02rate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("est02ref_no")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("est02sub_total")
                        .HasColumnType("float");

                    b.Property<decimal?>("est02transportationfee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("est02un01uin")
                        .HasColumnType("int");

                    b.Property<double?>("est02vatper")
                        .HasColumnType("float");

                    b.Property<int?>("est02vec02uin")
                        .HasColumnType("int");

                    b.Property<int?>("pro02productspro02uin")
                        .HasColumnType("int");

                    b.Property<int?>("un01unitsun01uin")
                        .HasColumnType("int");

                    b.HasKey("est02uin");

                    b.HasIndex("est02estimatesalesuin");

                    b.HasIndex("est02pro02uin");

                    b.HasIndex("est02un01uin");

                    b.HasIndex("pro02productspro02uin");

                    b.HasIndex("un01unitsun01uin");

                    b.ToTable("est02estimatesalesitems");
                });

            modelBuilder.Entity("POSV1.TenantModel.Models.EntityModels.Inventory.cas01cashsettlement", b =>
                {
                    b.Property<int>("cas01uin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("cas01uin"));

                    b.Property<string>("CreatedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTimeOffset>("DateCreated")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateDeleted")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateUpdated")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("UpdatedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("cas0101voucher_no")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("cas01amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("cas01bank_ledname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cas01chqnumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("cas01customeruin")
                        .HasColumnType("int");

                    b.Property<string>("cas01invoice_no")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("cas01isbank")
                        .HasColumnType("bit");

                    b.Property<int?>("cas01payment_status")
                        .HasColumnType("int");

                    b.Property<int>("cas01payment_type")
                        .HasColumnType("int");

                    b.Property<int?>("cas01purchaseuin")
                        .HasColumnType("int");

                    b.Property<string>("cas01remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("cas01saleuin")
                        .HasColumnType("int");

                    b.Property<decimal?>("cas01tdspercentage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("cas01transaction_date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("cas01vendoruin")
                        .HasColumnType("int");

                    b.HasKey("cas01uin");

                    b.HasIndex("cas01customeruin");

                    b.HasIndex("cas01purchaseuin");

                    b.HasIndex("cas01saleuin");

                    b.HasIndex("cas01vendoruin");

                    b.ToTable("cas01cashsettlement");
                });

            modelBuilder.Entity("POSV1.TenantModel.Models.EntityModels.Inventory.cus01customers", b =>
                {
                    b.Property<int>("cus01uin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("cus01uin"));

                    b.Property<string>("BranchCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("CreatedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTimeOffset>("DateCreated")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateDeleted")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateUpdated")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("UpdatedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("cus01address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("cus01customerTypeId")
                        .HasColumnType("int");

                    b.Property<bool>("cus01deleted")
                        .HasColumnType("bit");

                    b.Property<bool>("cus01isvat")
                        .HasColumnType("bit");

                    b.Property<string>("cus01led_code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cus01name_eng")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cus01name_nep")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("cus01opening_bal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("cus01reg_no")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("cus01registered_date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("cus01status")
                        .HasColumnType("bit");

                    b.Property<string>("cus01tel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("cus01uin");

                    b.HasIndex("BranchCode");

                    b.HasIndex("cus01customerTypeId");

                    b.ToTable("cus01customers");
                });

            modelBuilder.Entity("POSV1.TenantModel.Models.EntityModels.Inventory.cus02customerType", b =>
                {
                    b.Property<int>("cus02Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("cus02Id"));

                    b.Property<string>("CreatedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTimeOffset>("DateCreated")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateDeleted")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateUpdated")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("UpdatedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<double?>("cus02DiscountPercenatge")
                        .HasColumnType("float");

                    b.Property<string>("cus02Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("cus02Id");

                    b.ToTable("cus02customerType");
                });

            modelBuilder.Entity("POSV1.TenantModel.Models.EntityModels.Inventory.pro01categories", b =>
                {
                    b.Property<int>("pro01uin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("pro01uin"));

                    b.Property<string>("CreatedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTimeOffset>("DateCreated")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateDeleted")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateUpdated")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("UpdatedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("pro01code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pro01name_eng")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pro01name_nep")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("pro01status")
                        .HasColumnType("bit");

                    b.HasKey("pro01uin");

                    b.ToTable("pro01categories");
                });

            modelBuilder.Entity("POSV1.TenantModel.Models.EntityModels.Inventory.pro02products", b =>
                {
                    b.Property<int>("pro02uin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("pro02uin"));

                    b.Property<string>("CreatedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTimeOffset>("DateCreated")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateDeleted")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateUpdated")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("UpdatedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("pro02code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pro02description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("pro02enable_stock")
                        .HasColumnType("bit");

                    b.Property<bool>("pro02hasmultipleunits")
                        .HasColumnType("bit");

                    b.Property<string>("pro02hscode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pro02image_url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("pro02is_taxable")
                        .HasColumnType("bit");

                    b.Property<decimal>("pro02last_cp")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("pro02last_sp")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("pro02name_eng")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pro02name_nep")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("pro02opening_qty")
                        .HasColumnType("float");

                    b.Property<int>("pro02pro01uin")
                        .HasColumnType("int");

                    b.Property<bool>("pro02status")
                        .HasColumnType("bit");

                    b.Property<int?>("pro02un01uin")
                        .HasColumnType("int");

                    b.HasKey("pro02uin");

                    b.HasIndex("pro02pro01uin");

                    b.HasIndex("pro02un01uin");

                    b.ToTable("pro02products");
                });

            modelBuilder.Entity("POSV1.TenantModel.Models.EntityModels.Inventory.pro03units", b =>
                {
                    b.Property<int>("pro03uin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("pro03uin"));

                    b.Property<string>("CreatedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTimeOffset>("DateCreated")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateDeleted")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateUpdated")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("UpdatedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("pro03last_cp")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("pro03last_sp")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("pro03pro02uin")
                        .HasColumnType("int");

                    b.Property<double>("pro03ratio")
                        .HasColumnType("float");

                    b.Property<bool>("pro03status")
                        .HasColumnType("bit");

                    b.Property<int>("pro03un01uin")
                        .HasColumnType("int");

                    b.HasKey("pro03uin");

                    b.HasIndex("pro03pro02uin");

                    b.HasIndex("pro03un01uin");

                    b.ToTable("pro03units");
                });

            modelBuilder.Entity("POSV1.TenantModel.Models.EntityModels.Inventory.pur01purchasereturns", b =>
                {
                    b.Property<int>("pur01returnuin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("pur01returnuin"));

                    b.Property<string>("CreatedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTimeOffset>("DateCreated")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateDeleted")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateUpdated")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("UpdatedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("pur01return_additional_disc")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("pur01return_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("pur01return_date_nep")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("pur01return_disc_amt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("pur01return_invoice_no")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("pur01return_is_deleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("pur01return_net_amt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("pur01return_remarks")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("pur01return_status")
                        .HasColumnType("bit");

                    b.Property<decimal>("pur01return_sub_total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("pur01return_total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("pur01return_vat_amt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<double>("pur01return_vat_per")
                        .HasColumnType("float");

                    b.Property<string>("pur01returnvoucher_no")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("pur01uin")
                        .HasColumnType("int");

                    b.Property<int>("pur01ven01uin")
                        .HasColumnType("int");

                    b.HasKey("pur01returnuin");

                    b.HasIndex("pur01uin");

                    b.HasIndex("pur01ven01uin");

                    b.ToTable("pur01purchasereturns");
                });

            modelBuilder.Entity("POSV1.TenantModel.Models.EntityModels.Inventory.pur01purchases", b =>
                {
                    b.Property<int>("pur01uin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("pur01uin"));

                    b.Property<string>("BranchCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("CreatedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTimeOffset>("DateCreated")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateDeleted")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateUpdated")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("UpdatedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("pur01additional_disc")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("pur01additionalcharge")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("pur01date")
                        .HasColumnType("datetime2");

                    b.Property<string>("pur01date_nep")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("pur01disc_amt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("pur01disc_percentage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("pur01invoice_no")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("pur01is_deleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("pur01net_amt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("pur01payment_status")
                        .HasColumnType("int");

                    b.Property<string>("pur01remarks")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("pur01status")
                        .HasColumnType("bit");

                    b.Property<decimal>("pur01sub_total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("pur01tdspercentage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("pur01total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("pur01vat_amt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<double>("pur01vat_per")
                        .HasColumnType("float");

                    b.Property<bool>("pur01vatapplicable")
                        .HasColumnType("bit");

                    b.Property<bool>("pur01vatclamable")
                        .HasColumnType("bit");

                    b.Property<int>("pur01ven01uin")
                        .HasColumnType("int");

                    b.Property<string>("pur01voucher_no")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("pur01uin");

                    b.HasIndex("BranchCode");

                    b.HasIndex("pur01ven01uin");

                    b.ToTable("pur01purchases");
                });

            modelBuilder.Entity("POSV1.TenantModel.Models.EntityModels.Inventory.pur02items", b =>
                {
                    b.Property<int>("pur02uin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("pur02uin"));

                    b.Property<string>("CreatedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTimeOffset>("DateCreated")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateDeleted")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateUpdated")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("UpdatedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal?>("pur02amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("pur02batch_no")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("pur02disc_amt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("pur02exp_date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("pur02mfg_date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("pur02net_amt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("pur02pro02uin")
                        .HasColumnType("int");

                    b.Property<int>("pur02pur01uin")
                        .HasColumnType("int");

                    b.Property<int>("pur02qty")
                        .HasColumnType("int");

                    b.Property<decimal>("pur02rate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("pur02un01uin")
                        .HasColumnType("int");

                    b.HasKey("pur02uin");

                    b.HasIndex("pur02pro02uin");

                    b.HasIndex("pur02pur01uin");

                    b.HasIndex("pur02un01uin");

                    b.ToTable("pur02items");
                });

            modelBuilder.Entity("POSV1.TenantModel.Models.EntityModels.Inventory.pur02returnitems", b =>
                {
                    b.Property<int>("pur02returnuin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("pur02returnuin"));

                    b.Property<string>("CreatedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTimeOffset>("DateCreated")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateDeleted")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateUpdated")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("UpdatedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("pur02net_amt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("pur02returnamount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("pur02returnbatch_no")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("pur02returndisc_amt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("pur02returnexp_date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("pur02returnmfg_date")
                        .HasColumnType("datetime2");

                    b.Property<int>("pur02returnpro02uin")
                        .HasColumnType("int");

                    b.Property<int>("pur02returnpur01uin")
                        .HasColumnType("int");

                    b.Property<int>("pur02returnqty")
                        .HasColumnType("int");

                    b.Property<decimal>("pur02returnrate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("pur02returnun01uin")
                        .HasColumnType("int");

                    b.HasKey("pur02returnuin");

                    b.HasIndex("pur02returnpro02uin");

                    b.HasIndex("pur02returnpur01uin");

                    b.HasIndex("pur02returnun01uin");

                    b.ToTable("pur02returnitems");
                });

            modelBuilder.Entity("POSV1.TenantModel.Models.EntityModels.Inventory.sal01sales", b =>
                {
                    b.Property<int>("sal01uin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("sal01uin"));

                    b.Property<string>("BranchCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("CreatedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTimeOffset>("DateCreated")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateDeleted")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateUpdated")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("UpdatedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("sal01cus01uin")
                        .HasColumnType("int");

                    b.Property<DateTime>("sal01date_eng")
                        .HasColumnType("datetime2");

                    b.Property<string>("sal01date_nep")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("sal01deleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("sal01disc_amt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("sal01disc_percentage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("sal01invoice_no")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("sal01net_amt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("sal01payment_status")
                        .HasColumnType("int");

                    b.Property<string>("sal01remarks")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("sal01status")
                        .HasColumnType("bit");

                    b.Property<decimal>("sal01sub_total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("sal01total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("sal01vat_amt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<double>("sal01vat_per")
                        .HasColumnType("float");

                    b.Property<bool>("sal01vatapplicable")
                        .HasColumnType("bit");

                    b.Property<bool>("sal01vatclamable")
                        .HasColumnType("bit");

                    b.Property<string>("sal01voucher_no")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("sal01uin");

                    b.HasIndex("BranchCode");

                    b.HasIndex("sal01cus01uin");

                    b.ToTable("sal01sales");
                });

            modelBuilder.Entity("POSV1.TenantModel.Models.EntityModels.Inventory.sal01salesreturn", b =>
                {
                    b.Property<int>("sal01uin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("sal01uin"));

                    b.Property<string>("CreatedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTimeOffset>("DateCreated")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateDeleted")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateUpdated")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("UpdatedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("sal01_salId")
                        .HasColumnType("int");

                    b.Property<int>("sal01cus01uin")
                        .HasColumnType("int");

                    b.Property<DateTime>("sal01date_eng")
                        .HasColumnType("datetime2");

                    b.Property<string>("sal01date_nep")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("sal01deleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("sal01disc_amt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("sal01invoice_no")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("sal01net_amt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("sal01remarks")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sal01returnvoucher_no")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("sal01status")
                        .HasColumnType("bit");

                    b.Property<decimal>("sal01sub_total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("sal01total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("sal01vat_amt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<double>("sal01vat_per")
                        .HasColumnType("float");

                    b.HasKey("sal01uin");

                    b.HasIndex("sal01_salId");

                    b.HasIndex("sal01cus01uin");

                    b.ToTable("sal01salesreturn");
                });

            modelBuilder.Entity("POSV1.TenantModel.Models.EntityModels.Inventory.sal02items", b =>
                {
                    b.Property<int>("sal02uin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("sal02uin"));

                    b.Property<string>("CreatedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTimeOffset>("DateCreated")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateDeleted")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateUpdated")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("UpdatedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("sal02destination")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("sal02disc_amt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("sal02emp01uin")
                        .HasColumnType("int");

                    b.Property<double>("sal02net_amt")
                        .HasColumnType("float");

                    b.Property<int>("sal02pro02uin")
                        .HasColumnType("int");

                    b.Property<double>("sal02qty")
                        .HasColumnType("float");

                    b.Property<decimal>("sal02rate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("sal02ref_no")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("sal02sal01uin")
                        .HasColumnType("int");

                    b.Property<double>("sal02sub_total")
                        .HasColumnType("float");

                    b.Property<decimal?>("sal02transportationfee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("sal02un01uin")
                        .HasColumnType("int");

                    b.Property<double?>("sal02vatper")
                        .HasColumnType("float");

                    b.Property<int?>("sal02vec02uin")
                        .HasColumnType("int");

                    b.HasKey("sal02uin");

                    b.HasIndex("sal02pro02uin");

                    b.HasIndex("sal02sal01uin");

                    b.HasIndex("sal02un01uin");

                    b.ToTable("sal02items");
                });

            modelBuilder.Entity("POSV1.TenantModel.Models.EntityModels.Inventory.sal02itemsreturn", b =>
                {
                    b.Property<int>("sal02uin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("sal02uin"));

                    b.Property<string>("CreatedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTimeOffset>("DateCreated")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateDeleted")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateUpdated")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("UpdatedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("sal02destination")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("sal02disc_amt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("sal02emp01uin")
                        .HasColumnType("int");

                    b.Property<double>("sal02net_amt")
                        .HasColumnType("float");

                    b.Property<int>("sal02pro02uin")
                        .HasColumnType("int");

                    b.Property<double>("sal02qty")
                        .HasColumnType("float");

                    b.Property<decimal>("sal02rate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("sal02ref_no")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("sal02sal01uin")
                        .HasColumnType("int");

                    b.Property<double>("sal02sub_total")
                        .HasColumnType("float");

                    b.Property<decimal?>("sal02transportationfee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("sal02un01uin")
                        .HasColumnType("int");

                    b.Property<int?>("sal02vec02uin")
                        .HasColumnType("int");

                    b.HasKey("sal02uin");

                    b.HasIndex("sal02pro02uin");

                    b.HasIndex("sal02sal01uin");

                    b.HasIndex("sal02un01uin");

                    b.ToTable("sal02itemsreturn");
                });

            modelBuilder.Entity("POSV1.TenantModel.Models.EntityModels.Inventory.sup01suppliers", b =>
                {
                    b.Property<int>("sup01uin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("sup01uin"));

                    b.Property<string>("CreatedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTimeOffset>("DateCreated")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateDeleted")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateUpdated")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("UpdatedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("sup01address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("sup01balance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("sup01regDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("sup01regNo")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("sup01tel")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("sup01uin");

                    b.ToTable("sup01suppliers");
                });

            modelBuilder.Entity("POSV1.TenantModel.Models.EntityModels.Inventory.ta01taxsettlement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("CanBeDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("CreatedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTimeOffset>("DateCreated")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateDeleted")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateUpdated")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsForTDs")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("taxPercentage")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("ta01taxsettlement");
                });

            modelBuilder.Entity("POSV1.TenantModel.Models.EntityModels.Inventory.tran01transaction_types", b =>
                {
                    b.Property<int>("tran01uin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("tran01uin"));

                    b.Property<string>("CreatedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTimeOffset>("DateCreated")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateDeleted")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateUpdated")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("UpdatedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("tran02name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("tran01uin");

                    b.ToTable("tran01transaction_types");
                });

            modelBuilder.Entity("POSV1.TenantModel.Models.EntityModels.Inventory.tran02transaction_summaries", b =>
                {
                    b.Property<int>("tran02uin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("tran02uin"));

                    b.Property<string>("CreatedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTimeOffset>("DateCreated")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateDeleted")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateUpdated")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("UpdatedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("tran02bill_no")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("tran02created_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("tran02created_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("tran02cus01uin")
                        .HasColumnType("int");

                    b.Property<decimal>("tran02discount_amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<float>("tran02discount_percent")
                        .HasColumnType("real");

                    b.Property<bool>("tran02discount_type")
                        .HasColumnType("bit");

                    b.Property<string>("tran02invoice_no")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("tran02net_amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("tran02remark")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tran02status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("tran02sub_total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("tran02sup01uin")
                        .HasColumnType("int");

                    b.Property<decimal>("tran02tax_amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<float>("tran02tax_percent")
                        .HasColumnType("real");

                    b.Property<decimal>("tran02taxable_amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("tran02tran01uin")
                        .HasColumnType("int");

                    b.Property<DateTime>("tran02transaction_date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("tran02updated_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("tran02updated_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("tran02uin");

                    b.HasIndex("tran02cus01uin");

                    b.HasIndex("tran02sup01uin");

                    b.HasIndex("tran02tran01uin");

                    b.ToTable("tran02transaction_summaries");
                });

            modelBuilder.Entity("POSV1.TenantModel.Models.EntityModels.Inventory.tran04transaction_out_details", b =>
                {
                    b.Property<int>("tran04uin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("tran04uin"));

                    b.Property<string>("CreatedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTimeOffset>("DateCreated")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateDeleted")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateUpdated")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("UpdatedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<float>("tran04base_quantity")
                        .HasColumnType("real");

                    b.Property<decimal>("tran04discount_amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<float>("tran04discount_percent")
                        .HasColumnType("real");

                    b.Property<bool>("tran04discount_type")
                        .HasColumnType("bit");

                    b.Property<decimal>("tran04net_amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("tran04pro02uin")
                        .HasColumnType("int");

                    b.Property<float>("tran04quantity")
                        .HasColumnType("real");

                    b.Property<int>("tran04sal01uin")
                        .HasColumnType("int");

                    b.Property<string>("tran04status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("tran04sub_total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("tran04tax_amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<float>("tran04tax_percent")
                        .HasColumnType("real");

                    b.Property<bool>("tran04taxable")
                        .HasColumnType("bit");

                    b.Property<int>("tran04tran02uin")
                        .HasColumnType("int");

                    b.Property<string>("tran04unit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("tran04unit_price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("tran04uin");

                    b.HasIndex("tran04pro02uin");

                    b.HasIndex("tran04sal01uin");

                    b.HasIndex("tran04tran02uin");

                    b.ToTable("tran04transaction_out_details");
                });

            modelBuilder.Entity("POSV1.TenantModel.Models.EntityModels.Inventory.un01units", b =>
                {
                    b.Property<int>("un01uin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("un01uin"));

                    b.Property<string>("CreatedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTimeOffset>("DateCreated")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateDeleted")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateUpdated")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("UpdatedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("un01desc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("un01name_eng")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("un01name_nep")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("un01ratio")
                        .HasColumnType("float");

                    b.Property<bool>("un01status")
                        .HasColumnType("bit");

                    b.HasKey("un01uin");

                    b.ToTable("un01units");
                });

            modelBuilder.Entity("POSV1.TenantModel.Models.EntityModels.Inventory.ven01vendors", b =>
                {
                    b.Property<int>("ven01uin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ven01uin"));

                    b.Property<string>("BranchCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("CreatedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTimeOffset>("DateCreated")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateDeleted")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateUpdated")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("UpdatedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ven01address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ven01is_deleted")
                        .HasColumnType("bit");

                    b.Property<bool>("ven01isvat")
                        .HasColumnType("bit");

                    b.Property<string>("ven01led_code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ven01name_eng")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ven01name_nep")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("ven01opening_bal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ven01reg_no")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ven01registered_date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("ven01status")
                        .HasColumnType("bit");

                    b.Property<string>("ven01tel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ven01uin");

                    b.HasIndex("BranchCode");

                    b.ToTable("ven01vendors");
                });

            modelBuilder.Entity("POSV1.TenantModel.Models.EntityModels.Inventory.wag01wagerate", b =>
                {
                    b.Property<int>("wag01uin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("wag01uin"));

                    b.Property<string>("CreatedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTimeOffset>("DateCreated")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateDeleted")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateUpdated")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("UpdatedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("wag01canbedeleted")
                        .HasColumnType("bit");

                    b.Property<string>("wag01identificationcode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("wag01title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("wag01value")
                        .HasColumnType("float");

                    b.Property<int>("wag01wagetype")
                        .HasColumnType("int");

                    b.HasKey("wag01uin");

                    b.ToTable("Wag01Wagerates");
                });

            modelBuilder.Entity("POSV1.TenantModel.Models.EntityModels.Production.add01additionalcharges", b =>
                {
                    b.Property<int>("add01uin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("add01uin"));

                    b.Property<string>("CreatedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTimeOffset>("DateCreated")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateDeleted")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateUpdated")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("UpdatedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("add01description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("add01title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("add01uin");

                    b.ToTable("Add01Additionalcharges");
                });

            modelBuilder.Entity("POSV1.TenantModel.Models.EntityModels.Production.add02purchaseadditionalcharges", b =>
                {
                    b.Property<int>("add02uin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("add02uin"));

                    b.Property<string>("CreatedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTimeOffset>("DateCreated")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateDeleted")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateUpdated")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("UpdatedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("add02uin");

                    b.ToTable("Add02Purchaseadditionalcharges");
                });

            modelBuilder.Entity("POSV1.TenantModel.Models.EntityModels.Production.add03purchaseadditionalchargesdetail", b =>
                {
                    b.Property<int>("add03uin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("add03uin"));

                    b.Property<int>("add02uin")
                        .HasColumnType("int");

                    b.Property<decimal>("add03amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("add03remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("add03title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("add03uin");

                    b.HasIndex("add02uin");

                    b.ToTable("Add03Purchaseadditionalchargesdetails");
                });

            modelBuilder.Entity("POSV1.TenantModel.Models.EntityModels.Production.add04chargepurchaserel", b =>
                {
                    b.Property<int>("add04uin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("add04uin"));

                    b.Property<bool>("add04isdeleted")
                        .HasColumnType("bit");

                    b.Property<int>("add04puraddchargeuin")
                        .HasColumnType("int");

                    b.Property<int>("add04purchaseuin")
                        .HasColumnType("int");

                    b.HasKey("add04uin");

                    b.HasIndex("add04puraddchargeuin");

                    b.HasIndex("add04purchaseuin");

                    b.ToTable("Add04Chargepurchaserels");
                });

            modelBuilder.Entity("POSV1.TenantModel.Models.EntityModels.Production.prod01production", b =>
                {
                    b.Property<int>("prod01uin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("prod01uin"));

                    b.Property<string>("CreatedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTimeOffset>("DateCreated")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateDeleted")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateUpdated")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("UpdatedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("prod01code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("prod01description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("prod01enddate")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("prod01startdate")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("prod01status")
                        .HasColumnType("int");

                    b.Property<string>("prod01title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("prod01uin");

                    b.ToTable("Prod01Productions");
                });

            modelBuilder.Entity("POSV1.TenantModel.Models.EntityModels.Production.prod02consumerawproduct", b =>
                {
                    b.Property<int>("prod02uin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("prod02uin"));

                    b.Property<string>("CreatedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTimeOffset>("DateCreated")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateDeleted")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateUpdated")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("UpdatedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("prod02isallused")
                        .HasColumnType("bit");

                    b.Property<int>("prod02productionuin")
                        .HasColumnType("int");

                    b.Property<int>("prod02productuin")
                        .HasColumnType("int");

                    b.Property<double>("prod02qty")
                        .HasColumnType("float");

                    b.Property<decimal>("prod02rate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<double?>("prod02remainingqty")
                        .HasColumnType("float");

                    b.Property<string>("prod02unitname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("prod02unituin")
                        .HasColumnType("int");

                    b.Property<string>("prod2productname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("prod02uin");

                    b.HasIndex("prod02productionuin");

                    b.HasIndex("prod02productuin");

                    b.HasIndex("prod02unituin");

                    b.ToTable("Prod02Consumerawproducts");
                });

            modelBuilder.Entity("POSV1.TenantModel.Models.EntityModels.Production.prod03statuslog", b =>
                {
                    b.Property<int>("prod03uin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("prod03uin"));

                    b.Property<string>("CreatedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTimeOffset>("DateCreated")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateDeleted")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateUpdated")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("UpdatedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("prod03newstatus")
                        .HasColumnType("int");

                    b.Property<int>("prod03previousstatus")
                        .HasColumnType("int");

                    b.Property<int>("prod03productionuin")
                        .HasColumnType("int");

                    b.Property<string>("prod03remarks")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("prod03uin");

                    b.HasIndex("prod03productionuin");

                    b.ToTable("prod03statuslog");
                });

            modelBuilder.Entity("POSV1.TenantModel.Models.EntityModels.Production.prod04finalproducts", b =>
                {
                    b.Property<int>("prod04uin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("prod04uin"));

                    b.Property<string>("CreatedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTimeOffset>("DateCreated")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateDeleted")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateUpdated")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("UpdatedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTimeOffset>("prod04date")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("prod04desc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("prod04finalproductsprod04uin")
                        .HasColumnType("int");

                    b.Property<string>("prod04productname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("prod04productuin")
                        .HasColumnType("int");

                    b.Property<int>("prod04qty")
                        .HasColumnType("int");

                    b.Property<string>("prod04remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("prod04unitname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("prod04unitratio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("prod04unituin")
                        .HasColumnType("int");

                    b.Property<int>("prod4productionuin")
                        .HasColumnType("int");

                    b.HasKey("prod04uin");

                    b.HasIndex("prod04finalproductsprod04uin");

                    b.HasIndex("prod04productuin");

                    b.HasIndex("prod04unituin");

                    b.HasIndex("prod4productionuin");

                    b.ToTable("prod04finalproducts");
                });

            modelBuilder.Entity("POSV1.TenantModel.Models.EntityModels.Settings.ConfigurationSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("CanBeEdited")
                        .HasColumnType("bit");

                    b.Property<string>("CreatedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTimeOffset>("DateCreated")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateDeleted")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateUpdated")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(MAX)");

                    b.HasKey("Id");

                    b.ToTable("ConfigurationSettings");
                });

            modelBuilder.Entity("POSV1.TenantModel.Models.EntityModels.Settings.MainSetup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTimeOffset>("DateCreated")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateDeleted")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateUpdated")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DbName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DbPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeletedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Logo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrgName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Server")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("MainSetups");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            CreatedName = "SYSTEM",
                            DateCreated = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            DbName = "POS_V1",
                            DbPassword = "asdf",
                            DeletedName = "",
                            OrgName = "Default Org",
                            Server = ".",
                            UpdatedName = ""
                        });
                });

            modelBuilder.Entity("POSV1.TenantModel.Models.EntityModels.Settings.OrgBranch", b =>
                {
                    b.Property<string>("BranchCode")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("BranchName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CreatedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTimeOffset>("DateCreated")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateDeleted")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateUpdated")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<string>("UpdatedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("BranchCode");

                    b.ToTable("BranchDatas");

                    b.HasData(
                        new
                        {
                            BranchCode = "HO-001",
                            BranchName = "Head Office",
                            CreatedName = "SYSTEM",
                            DateCreated = new DateTimeOffset(new DateTime(2025, 3, 21, 4, 21, 55, 703, DateTimeKind.Unspecified).AddTicks(500), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedName = "",
                            IsDefault = true,
                            UpdatedName = ""
                        });
                });

            modelBuilder.Entity("POSV1.TenantModel.Models.EntityModels.Settings.UserBranch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BranchCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BranchCode");

                    b.ToTable("UserBranches");
                });

            modelBuilder.Entity("POSV1.TenantModel.Models.Setting", b =>
                {
                    b.Property<int>("id")
                        .HasColumnType("int");

                    b.Property<int>("modules")
                        .HasColumnType("int");

                    b.Property<string>("lastUpdated_by")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("lastUpdated_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("values")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id", "modules");

                    b.ToTable("settings");
                });

            modelBuilder.Entity("POSV1.TenantModel.Models.cfg01configurations", b =>
                {
                    b.Property<int>("cfg01uin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("cfg01uin"));

                    b.Property<DateTime>("cfg01created_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("cfg01created_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cfg01key")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cfg01module")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("cfg01updated_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("cfg01updated_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cfg01value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("cfg01uin");

                    b.ToTable("cfg01configurations");
                });

            modelBuilder.Entity("POSV1.TenantModel.Models.vou01voucher_types", b =>
                {
                    b.Property<int>("vou01uin")
                        .HasColumnType("int");

                    b.Property<string>("CreatedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTimeOffset>("DateCreated")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateDeleted")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateUpdated")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("UpdatedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("vou01last_no")
                        .HasColumnType("int");

                    b.Property<string>("vou01prefix")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("vou01title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("vou01uin");

                    b.ToTable("vou01voucher_types");
                });

            modelBuilder.Entity("POSV1.TenantModel.Models.vou02voucher_summary", b =>
                {
                    b.Property<string>("vou02full_no")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTimeOffset>("DateCreated")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateDeleted")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateUpdated")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("UpdatedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("vou02amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("vou02chq")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("vou02contra_led05uin")
                        .HasColumnType("int");

                    b.Property<bool>("vou02deleted")
                        .HasColumnType("bit");

                    b.Property<string>("vou02description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("vou02is_approved")
                        .HasColumnType("bit");

                    b.Property<bool>("vou02is_sys_generated")
                        .HasColumnType("bit");

                    b.Property<string>("vou02manual_vno")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("vou02number")
                        .HasColumnType("int");

                    b.Property<int>("vou02status")
                        .HasColumnType("int");

                    b.Property<DateTime>("vou02value_date")
                        .HasColumnType("datetime2");

                    b.Property<int>("vou02vou01uin")
                        .HasColumnType("int");

                    b.HasKey("vou02full_no");

                    b.HasIndex("vou02contra_led05uin");

                    b.HasIndex("vou02vou01uin");

                    b.ToTable("vou02voucher_summary");
                });

            modelBuilder.Entity("POSV1.TenantModel.Models.vou03voucher_details", b =>
                {
                    b.Property<int>("vou03uin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("vou03uin"));

                    b.Property<string>("CreatedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTimeOffset>("DateCreated")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateDeleted")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateUpdated")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("UpdatedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("vou03balance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("vou03chq")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("vou03cr")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("vou03description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("vou03dr")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("vou03led05uin")
                        .HasColumnType("int");

                    b.Property<string>("vou03vou02full_no")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("vou03uin");

                    b.HasIndex("vou03led05uin");

                    b.HasIndex("vou03vou02full_no");

                    b.ToTable("vou03voucher_details");
                });

            modelBuilder.Entity("POSV1.TenantModel.Models.vou04file_attachments", b =>
                {
                    b.Property<int>("vou04uin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("vou04uin"));

                    b.Property<string>("CreatedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTimeOffset>("DateCreated")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateDeleted")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateUpdated")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("UpdatedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("vou04created_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("vou04created_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("vou04deleted")
                        .HasColumnType("bit");

                    b.Property<string>("vou04filename")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("vou04location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("vou04updated_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("vou04updated_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("vou04vou02full_no")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("vou04uin");

                    b.HasIndex("vou04vou02full_no");

                    b.ToTable("vou04file_attachments");
                });

            modelBuilder.Entity("POSV1.TenantModel.Models.vou05voucher_log", b =>
                {
                    b.Property<int>("vou05uin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("vou05uin"));

                    b.Property<string>("CreatedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTimeOffset>("DateCreated")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateDeleted")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateUpdated")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("UpdatedName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("vou05vou02uin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("voucherStatus")
                        .HasColumnType("int");

                    b.HasKey("vou05uin");

                    b.ToTable("vou05voucher_log");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("POSV1.TenantModel.Models.EntityModels.Accounting.led01ledgers", b =>
                {
                    b.HasOne("POSV1.TenantModel.Models.EntityModels.Accounting.led03general_ledgers", "led03general_ledgers")
                        .WithMany("led01ledgers")
                        .HasForeignKey("led01led03uin")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("POSV1.TenantModel.Models.EntityModels.Accounting.led05ledger_types", "led05ledger_types")
                        .WithMany("led01ledgers")
                        .HasForeignKey("led01led05uin")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("led03general_ledgers");

                    b.Navigation("led05ledger_types");
                });

            modelBuilder.Entity("POSV1.TenantModel.Models.EntityModels.Accounting.led03general_ledgers", b =>
                {
                    b.HasOne("POSV1.TenantModel.Models.EntityModels.Accounting.led03general_ledgers", "led03parent")
                        .WithMany("led03child")
                        .HasForeignKey("led03led03uin")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("POSV1.TenantModel.Models.EntityModels.Accounting.led05ledger_types", "led05ledger_types")
                        .WithMany("led03general_ledgers")
                        .HasForeignKey("led03led05uin")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("led03parent");

                    b.Navigation("led05ledger_types");
                });

            modelBuilder.Entity("POSV1.TenantModel.Models.EntityModels.CloudR2.CloudR2Purchase", b =>
                {
                    b.HasOne("POSV1.TenantModel.Models.EntityModels.Inventory.pur01purchases", "Purchase")
                        .WithMany("CloudR2Purchase")
                        .HasForeignKey("PurchaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Purchase");
                });

            modelBuilder.Entity("POSV1.TenantModel.Models.EntityModels.Estimate.est02estimatesales", b =>
                {
                    b.HasOne("POSV1.TenantModel.Models.EntityModels.Inventory.cus01customers", "cus01customers")
                        .WithMany("est02estimatesales")
                        .HasForeignKey("cus01customerscus01uin");

                    b.HasOne("POSV1.TenantModel.Models.EntityModels.Estimate.est01estimate", "est01estimate")
                        .WithMany("est02estimatesales")
                        .HasForeignKey("est02est01uin")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("cus01customers");

                    b.Navigation("est01estimate");
                });

            modelBuilder.Entity("POSV1.TenantModel.Models.EntityModels.Estimate.est02estimatesalesitems", b =>
                {
                    b.HasOne("POSV1.TenantModel.Models.EntityModels.Estimate.est02estimatesales", "est02estimatesales")
                        .WithMany("est02estimatesalesitems")
                        .HasForeignKey("est02estimatesalesuin")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("POSV1.TenantModel.Models.EntityModels.Inventory.pro02products", "pro02products")
                        .WithMany()
                        .HasForeignKey("est02pro02uin")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("POSV1.TenantModel.Models.EntityModels.Inventory.un01units", "un01units")
                        .WithMany()
                        .HasForeignKey("est02un01uin")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("POSV1.TenantModel.Models.EntityModels.Inventory.pro02products", null)
                        .WithMany("est02estimatesalesitems")
                        .HasForeignKey("pro02productspro02uin");

                    b.HasOne("POSV1.TenantModel.Models.EntityModels.Inventory.un01units", null)
                        .WithMany("est02estimatesalesitems")
                        .HasForeignKey("un01unitsun01uin");

                    b.Navigation("est02estimatesales");

                    b.Navigation("pro02products");

                    b.Navigation("un01units");
                });

            modelBuilder.Entity("POSV1.TenantModel.Models.EntityModels.Inventory.cas01cashsettlement", b =>
                {
                    b.HasOne("POSV1.TenantModel.Models.EntityModels.Inventory.cus01customers", "cus01customers")
                        .WithMany("CashSettlements")
                        .HasForeignKey("cas01customeruin")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("POSV1.TenantModel.Models.EntityModels.Inventory.pur01purchases", "pur01purchases")
                        .WithMany("CashSettlements")
                        .HasForeignKey("cas01purchaseuin")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("POSV1.TenantModel.Models.EntityModels.Inventory.sal01sales", "sal01sales")
                        .WithMany("CashSettlements")
                        .HasForeignKey("cas01saleuin")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("POSV1.TenantModel.Models.EntityModels.Inventory.ven01vendors", "ven01vendors")
                        .WithMany("CashSettlements")
                        .HasForeignKey("cas01vendoruin")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("cus01customers");

                    b.Navigation("pur01purchases");

                    b.Navigation("sal01sales");

                    b.Navigation("ven01vendors");
                });

            modelBuilder.Entity("POSV1.TenantModel.Models.EntityModels.Inventory.cus01customers", b =>
                {
                    b.HasOne("POSV1.TenantModel.Models.EntityModels.Settings.OrgBranch", "BranchData")
                        .WithMany("Customer")
                        .HasForeignKey("BranchCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("POSV1.TenantModel.Models.EntityModels.Inventory.cus02customerType", "CustomerType")
                        .WithMany()
                        .HasForeignKey("cus01customerTypeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("BranchData");

                    b.Navigation("CustomerType");
                });

            modelBuilder.Entity("POSV1.TenantModel.Models.EntityModels.Inventory.pro02products", b =>
                {
                    b.HasOne("POSV1.TenantModel.Models.EntityModels.Inventory.pro01categories", "pro01categories")
                        .WithMany("pro02products")
                        .HasForeignKey("pro02pro01uin")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("POSV1.TenantModel.Models.EntityModels.Inventory.un01units", "un01units")
                        .WithMany("pro02products")
                        .HasForeignKey("pro02un01uin")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("pro01categories");

                    b.Navigation("un01units");
                });

            modelBuilder.Entity("POSV1.TenantModel.Models.EntityModels.Inventory.pro03units", b =>
                {
                    b.HasOne("POSV1.TenantModel.Models.EntityModels.Inventory.pro02products", "pro02products")
                        .WithMany("pro03units")
                        .HasForeignKey("pro03pro02uin")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("POSV1.TenantModel.Models.EntityModels.Inventory.un01units", "un01units")
                        .WithMany("pro03units")
                        .HasForeignKey("pro03un01uin")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("pro02products");

                    b.Navigation("un01units");
                });

            modelBuilder.Entity("POSV1.TenantModel.Models.EntityModels.Inventory.pur01purchasereturns", b =>
                {
                    b.HasOne("POSV1.TenantModel.Models.EntityModels.Inventory.pur01purchases", "pur01purchase")
                        .WithMany("pur01purchasereturns")
                        .HasForeignKey("pur01uin")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("POSV1.TenantModel.Models.EntityModels.Inventory.ven01vendors", "ven01vendors")
                        .WithMany()
                        .HasForeignKey("pur01ven01uin")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("pur01purchase");

                    b.Navigation("ven01vendors");
                });

            modelBuilder.Entity("POSV1.TenantModel.Models.EntityModels.Inventory.pur01purchases", b =>
                {
                    b.HasOne("POSV1.TenantModel.Models.EntityModels.Settings.OrgBranch", "BranchData")
                        .WithMany("Purchases")
                        .HasForeignKey("BranchCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("POSV1.TenantModel.Models.EntityModels.Inventory.ven01vendors", "ven01vendors")
                        .WithMany("pur01purchases")
                        .HasForeignKey("pur01ven01uin")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("BranchData");

                    b.Navigation("ven01vendors");
                });

            modelBuilder.Entity("POSV1.TenantModel.Models.EntityModels.Inventory.pur02items", b =>
                {
                    b.HasOne("POSV1.TenantModel.Models.EntityModels.Inventory.pro02products", "pro02products")
                        .WithMany("pur02items")
                        .HasForeignKey("pur02pro02uin")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("POSV1.TenantModel.Models.EntityModels.Inventory.pur01purchases", "pur01purchases")
                        .WithMany("pur02items")
                        .HasForeignKey("pur02pur01uin")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("POSV1.TenantModel.Models.EntityModels.Inventory.un01units", "un01units")
                        .WithMany("pur02items")
                        .HasForeignKey("pur02un01uin")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("pro02products");

                    b.Navigation("pur01purchases");

                    b.Navigation("un01units");
                });

            modelBuilder.Entity("POSV1.TenantModel.Models.EntityModels.Inventory.pur02returnitems", b =>
                {
                    b.HasOne("POSV1.TenantModel.Models.EntityModels.Inventory.pro02products", "pro02products")
                        .WithMany()
                        .HasForeignKey("pur02returnpro02uin")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("POSV1.TenantModel.Models.EntityModels.Inventory.pur01purchasereturns", "pur01purchasereturns")
                        .WithMany("pur02returnitems")
                        .HasForeignKey("pur02returnpur01uin")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("POSV1.TenantModel.Models.EntityModels.Inventory.un01units", "un01units")
                        .WithMany()
                        .HasForeignKey("pur02returnun01uin")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("pro02products");

                    b.Navigation("pur01purchasereturns");

                    b.Navigation("un01units");
                });

            modelBuilder.Entity("POSV1.TenantModel.Models.EntityModels.Inventory.sal01sales", b =>
                {
                    b.HasOne("POSV1.TenantModel.Models.EntityModels.Settings.OrgBranch", "BranchData")
                        .WithMany("Sale")
                        .HasForeignKey("BranchCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("POSV1.TenantModel.Models.EntityModels.Inventory.cus01customers", "cus01customers")
                        .WithMany("sal01sales")
                        .HasForeignKey("sal01cus01uin")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("BranchData");

                    b.Navigation("cus01customers");
                });

            modelBuilder.Entity("POSV1.TenantModel.Models.EntityModels.Inventory.sal01salesreturn", b =>
                {
                    b.HasOne("POSV1.TenantModel.Models.EntityModels.Inventory.sal01sales", "sal01sales")
                        .WithMany("sal01salesreturns")
                        .HasForeignKey("sal01_salId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("POSV1.TenantModel.Models.EntityModels.Inventory.cus01customers", "cus01customers")
                        .WithMany()
                        .HasForeignKey("sal01cus01uin")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("cus01customers");

                    b.Navigation("sal01sales");
                });

            modelBuilder.Entity("POSV1.TenantModel.Models.EntityModels.Inventory.sal02items", b =>
                {
                    b.HasOne("POSV1.TenantModel.Models.EntityModels.Inventory.pro02products", "pro02products")
                        .WithMany("sal02items")
                        .HasForeignKey("sal02pro02uin")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("POSV1.TenantModel.Models.EntityModels.Inventory.sal01sales", "sal01sales")
                        .WithMany("sal02items")
                        .HasForeignKey("sal02sal01uin")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("POSV1.TenantModel.Models.EntityModels.Inventory.un01units", "un01units")
                        .WithMany("sal02items")
                        .HasForeignKey("sal02un01uin")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("pro02products");

                    b.Navigation("sal01sales");

                    b.Navigation("un01units");
                });

            modelBuilder.Entity("POSV1.TenantModel.Models.EntityModels.Inventory.sal02itemsreturn", b =>
                {
                    b.HasOne("POSV1.TenantModel.Models.EntityModels.Inventory.pro02products", "pro02products")
                        .WithMany()
                        .HasForeignKey("sal02pro02uin")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("POSV1.TenantModel.Models.EntityModels.Inventory.sal01salesreturn", "sal01salesreturn")
                        .WithMany("sal02itemsreturn")
                        .HasForeignKey("sal02sal01uin")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("POSV1.TenantModel.Models.EntityModels.Inventory.un01units", "un01units")
                        .WithMany()
                        .HasForeignKey("sal02un01uin")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("pro02products");

                    b.Navigation("sal01salesreturn");

                    b.Navigation("un01units");
                });

            modelBuilder.Entity("POSV1.TenantModel.Models.EntityModels.Inventory.tran02transaction_summaries", b =>
                {
                    b.HasOne("POSV1.TenantModel.Models.EntityModels.Inventory.cus01customers", "cus01customers")
                        .WithMany("tran02transaction_summaries")
                        .HasForeignKey("tran02cus01uin")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("POSV1.TenantModel.Models.EntityModels.Inventory.sup01suppliers", "sup01suppliers")
                        .WithMany("tran02transaction_summaries")
                        .HasForeignKey("tran02sup01uin")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("POSV1.TenantModel.Models.EntityModels.Inventory.tran01transaction_types", "tran01transaction_types")
                        .WithMany("tran02transaction_summaries")
                        .HasForeignKey("tran02tran01uin")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("cus01customers");

                    b.Navigation("sup01suppliers");

                    b.Navigation("tran01transaction_types");
                });

            modelBuilder.Entity("POSV1.TenantModel.Models.EntityModels.Inventory.tran04transaction_out_details", b =>
                {
                    b.HasOne("POSV1.TenantModel.Models.EntityModels.Inventory.pro02products", "pro02products")
                        .WithMany("tran04transaction_out_details")
                        .HasForeignKey("tran04pro02uin")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("POSV1.TenantModel.Models.EntityModels.Inventory.sal01sales", "sal01sales")
                        .WithMany("tran04transaction_out_details")
                        .HasForeignKey("tran04sal01uin")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("POSV1.TenantModel.Models.EntityModels.Inventory.tran02transaction_summaries", "tran02transaction_summaries")
                        .WithMany("tran04transaction_out_details")
                        .HasForeignKey("tran04tran02uin")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("pro02products");

                    b.Navigation("sal01sales");

                    b.Navigation("tran02transaction_summaries");
                });

            modelBuilder.Entity("POSV1.TenantModel.Models.EntityModels.Inventory.ven01vendors", b =>
                {
                    b.HasOne("POSV1.TenantModel.Models.EntityModels.Settings.OrgBranch", "BranchData")
                        .WithMany("Vendor")
                        .HasForeignKey("BranchCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("BranchData");
                });

            modelBuilder.Entity("POSV1.TenantModel.Models.EntityModels.Production.add03purchaseadditionalchargesdetail", b =>
                {
                    b.HasOne("POSV1.TenantModel.Models.EntityModels.Production.add02purchaseadditionalcharges", "PurchaseAdditionalCharges")
                        .WithMany("AdditionalChargesDetails")
                        .HasForeignKey("add02uin")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PurchaseAdditionalCharges");
                });

            modelBuilder.Entity("POSV1.TenantModel.Models.EntityModels.Production.add04chargepurchaserel", b =>
                {
                    b.HasOne("POSV1.TenantModel.Models.EntityModels.Production.add02purchaseadditionalcharges", "PurchaseAdditionalCharges")
                        .WithMany("ChargePurchaseRelations")
                        .HasForeignKey("add04puraddchargeuin")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("POSV1.TenantModel.Models.EntityModels.Inventory.pur01purchases", "Purchase")
                        .WithMany("ChargePurchaseRelations")
                        .HasForeignKey("add04purchaseuin")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Purchase");

                    b.Navigation("PurchaseAdditionalCharges");
                });

            modelBuilder.Entity("POSV1.TenantModel.Models.EntityModels.Production.prod02consumerawproduct", b =>
                {
                    b.HasOne("POSV1.TenantModel.Models.EntityModels.Production.prod01production", "Production")
                        .WithMany("RawProducts")
                        .HasForeignKey("prod02productionuin")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("POSV1.TenantModel.Models.EntityModels.Inventory.pro02products", "Product")
                        .WithMany("RawProducts")
                        .HasForeignKey("prod02productuin")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("POSV1.TenantModel.Models.EntityModels.Inventory.un01units", null)
                        .WithMany()
                        .HasForeignKey("prod02unituin")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Production");
                });

            modelBuilder.Entity("POSV1.TenantModel.Models.EntityModels.Production.prod03statuslog", b =>
                {
                    b.HasOne("POSV1.TenantModel.Models.EntityModels.Production.prod01production", "Production")
                        .WithMany("StatusLogs")
                        .HasForeignKey("prod03productionuin")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Production");
                });

            modelBuilder.Entity("POSV1.TenantModel.Models.EntityModels.Production.prod04finalproducts", b =>
                {
                    b.HasOne("POSV1.TenantModel.Models.EntityModels.Production.prod04finalproducts", null)
                        .WithMany("FinalProducts")
                        .HasForeignKey("prod04finalproductsprod04uin");

                    b.HasOne("POSV1.TenantModel.Models.EntityModels.Inventory.pro02products", "Product")
                        .WithMany("FinalProducts")
                        .HasForeignKey("prod04productuin")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("POSV1.TenantModel.Models.EntityModels.Inventory.un01units", "Unit")
                        .WithMany("FinalProducts")
                        .HasForeignKey("prod04unituin")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("POSV1.TenantModel.Models.EntityModels.Production.prod01production", "Production")
                        .WithMany("FinalProducts")
                        .HasForeignKey("prod4productionuin")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Production");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("POSV1.TenantModel.Models.EntityModels.Settings.UserBranch", b =>
                {
                    b.HasOne("POSV1.TenantModel.Models.EntityModels.Settings.OrgBranch", "Branch")
                        .WithMany("UserBranches")
                        .HasForeignKey("BranchCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Branch");
                });

            modelBuilder.Entity("POSV1.TenantModel.Models.vou02voucher_summary", b =>
                {
                    b.HasOne("POSV1.TenantModel.Models.EntityModels.Accounting.led01ledgers", "led01ledgers")
                        .WithMany("vou02voucher_summary")
                        .HasForeignKey("vou02contra_led05uin")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("POSV1.TenantModel.Models.vou01voucher_types", "vou01voucher_types")
                        .WithMany("vou02voucher_summary")
                        .HasForeignKey("vou02vou01uin")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("led01ledgers");

                    b.Navigation("vou01voucher_types");
                });

            modelBuilder.Entity("POSV1.TenantModel.Models.vou03voucher_details", b =>
                {
                    b.HasOne("POSV1.TenantModel.Models.EntityModels.Accounting.led01ledgers", "led01ledgers")
                        .WithMany("vou03voucher_details")
                        .HasForeignKey("vou03led05uin")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("POSV1.TenantModel.Models.vou02voucher_summary", "vou02voucher_summary")
                        .WithMany("vou03voucher_details")
                        .HasForeignKey("vou03vou02full_no")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("led01ledgers");

                    b.Navigation("vou02voucher_summary");
                });

            modelBuilder.Entity("POSV1.TenantModel.Models.vou04file_attachments", b =>
                {
                    b.HasOne("POSV1.TenantModel.Models.vou02voucher_summary", "vou02voucher_summary")
                        .WithMany("vou04file_attachments")
                        .HasForeignKey("vou04vou02full_no")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("vou02voucher_summary");
                });

            modelBuilder.Entity("POSV1.TenantModel.Models.EntityModels.Accounting.led01ledgers", b =>
                {
                    b.Navigation("vou02voucher_summary");

                    b.Navigation("vou03voucher_details");
                });

            modelBuilder.Entity("POSV1.TenantModel.Models.EntityModels.Accounting.led03general_ledgers", b =>
                {
                    b.Navigation("led01ledgers");

                    b.Navigation("led03child");
                });

            modelBuilder.Entity("POSV1.TenantModel.Models.EntityModels.Accounting.led05ledger_types", b =>
                {
                    b.Navigation("led01ledgers");

                    b.Navigation("led03general_ledgers");
                });

            modelBuilder.Entity("POSV1.TenantModel.Models.EntityModels.Estimate.est01estimate", b =>
                {
                    b.Navigation("est02estimatesales");
                });

            modelBuilder.Entity("POSV1.TenantModel.Models.EntityModels.Estimate.est02estimatesales", b =>
                {
                    b.Navigation("est02estimatesalesitems");
                });

            modelBuilder.Entity("POSV1.TenantModel.Models.EntityModels.Inventory.cus01customers", b =>
                {
                    b.Navigation("CashSettlements");

                    b.Navigation("est02estimatesales");

                    b.Navigation("sal01sales");

                    b.Navigation("tran02transaction_summaries");
                });

            modelBuilder.Entity("POSV1.TenantModel.Models.EntityModels.Inventory.pro01categories", b =>
                {
                    b.Navigation("pro02products");
                });

            modelBuilder.Entity("POSV1.TenantModel.Models.EntityModels.Inventory.pro02products", b =>
                {
                    b.Navigation("FinalProducts");

                    b.Navigation("RawProducts");

                    b.Navigation("est02estimatesalesitems");

                    b.Navigation("pro03units");

                    b.Navigation("pur02items");

                    b.Navigation("sal02items");

                    b.Navigation("tran04transaction_out_details");
                });

            modelBuilder.Entity("POSV1.TenantModel.Models.EntityModels.Inventory.pur01purchasereturns", b =>
                {
                    b.Navigation("pur02returnitems");
                });

            modelBuilder.Entity("POSV1.TenantModel.Models.EntityModels.Inventory.pur01purchases", b =>
                {
                    b.Navigation("CashSettlements");

                    b.Navigation("ChargePurchaseRelations");

                    b.Navigation("CloudR2Purchase");

                    b.Navigation("pur01purchasereturns");

                    b.Navigation("pur02items");
                });

            modelBuilder.Entity("POSV1.TenantModel.Models.EntityModels.Inventory.sal01sales", b =>
                {
                    b.Navigation("CashSettlements");

                    b.Navigation("sal01salesreturns");

                    b.Navigation("sal02items");

                    b.Navigation("tran04transaction_out_details");
                });

            modelBuilder.Entity("POSV1.TenantModel.Models.EntityModels.Inventory.sal01salesreturn", b =>
                {
                    b.Navigation("sal02itemsreturn");
                });

            modelBuilder.Entity("POSV1.TenantModel.Models.EntityModels.Inventory.sup01suppliers", b =>
                {
                    b.Navigation("tran02transaction_summaries");
                });

            modelBuilder.Entity("POSV1.TenantModel.Models.EntityModels.Inventory.tran01transaction_types", b =>
                {
                    b.Navigation("tran02transaction_summaries");
                });

            modelBuilder.Entity("POSV1.TenantModel.Models.EntityModels.Inventory.tran02transaction_summaries", b =>
                {
                    b.Navigation("tran04transaction_out_details");
                });

            modelBuilder.Entity("POSV1.TenantModel.Models.EntityModels.Inventory.un01units", b =>
                {
                    b.Navigation("FinalProducts");

                    b.Navigation("est02estimatesalesitems");

                    b.Navigation("pro02products");

                    b.Navigation("pro03units");

                    b.Navigation("pur02items");

                    b.Navigation("sal02items");
                });

            modelBuilder.Entity("POSV1.TenantModel.Models.EntityModels.Inventory.ven01vendors", b =>
                {
                    b.Navigation("CashSettlements");

                    b.Navigation("pur01purchases");
                });

            modelBuilder.Entity("POSV1.TenantModel.Models.EntityModels.Production.add02purchaseadditionalcharges", b =>
                {
                    b.Navigation("AdditionalChargesDetails");

                    b.Navigation("ChargePurchaseRelations");
                });

            modelBuilder.Entity("POSV1.TenantModel.Models.EntityModels.Production.prod01production", b =>
                {
                    b.Navigation("FinalProducts");

                    b.Navigation("RawProducts");

                    b.Navigation("StatusLogs");
                });

            modelBuilder.Entity("POSV1.TenantModel.Models.EntityModels.Production.prod04finalproducts", b =>
                {
                    b.Navigation("FinalProducts");
                });

            modelBuilder.Entity("POSV1.TenantModel.Models.EntityModels.Settings.OrgBranch", b =>
                {
                    b.Navigation("Customer");

                    b.Navigation("Purchases");

                    b.Navigation("Sale");

                    b.Navigation("UserBranches");

                    b.Navigation("Vendor");
                });

            modelBuilder.Entity("POSV1.TenantModel.Models.vou01voucher_types", b =>
                {
                    b.Navigation("vou02voucher_summary");
                });

            modelBuilder.Entity("POSV1.TenantModel.Models.vou02voucher_summary", b =>
                {
                    b.Navigation("vou03voucher_details");

                    b.Navigation("vou04file_attachments");
                });
#pragma warning restore 612, 618
        }
    }
}
